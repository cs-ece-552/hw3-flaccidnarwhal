$date
	Thu Feb 14 14:48:32 2019
$end
$version
	ModelSim Version 10.4a
$end
$timescale
	1ns
$end

$scope module rca_16b_bench $end
$var reg 17 ! A [16:0] $end
$var reg 17 " B [16:0] $end
$var reg 17 # Sumcalc [16:0] $end
$var reg 1 $ C_in $end
$var wire 1 % SUM [15] $end
$var wire 1 & SUM [14] $end
$var wire 1 ' SUM [13] $end
$var wire 1 ( SUM [12] $end
$var wire 1 ) SUM [11] $end
$var wire 1 * SUM [10] $end
$var wire 1 + SUM [9] $end
$var wire 1 , SUM [8] $end
$var wire 1 - SUM [7] $end
$var wire 1 . SUM [6] $end
$var wire 1 / SUM [5] $end
$var wire 1 0 SUM [4] $end
$var wire 1 1 SUM [3] $end
$var wire 1 2 SUM [2] $end
$var wire 1 3 SUM [1] $end
$var wire 1 4 SUM [0] $end
$var wire 1 5 CO $end
$var wire 1 6 Clk $end
$var wire 1 7 rst $end
$var wire 1 8 err $end

$scope module my_clkrst $end
$var reg 1 9 clk $end
$var reg 1 : rst $end
$var wire 1 8 err $end
$var integer 32 ; cycle_count $end
$upscope $end

$scope module DUT $end
$var parameter 32 < N $end
$var wire 1 = A [15] $end
$var wire 1 > A [14] $end
$var wire 1 ? A [13] $end
$var wire 1 @ A [12] $end
$var wire 1 A A [11] $end
$var wire 1 B A [10] $end
$var wire 1 C A [9] $end
$var wire 1 D A [8] $end
$var wire 1 E A [7] $end
$var wire 1 F A [6] $end
$var wire 1 G A [5] $end
$var wire 1 H A [4] $end
$var wire 1 I A [3] $end
$var wire 1 J A [2] $end
$var wire 1 K A [1] $end
$var wire 1 L A [0] $end
$var wire 1 M B [15] $end
$var wire 1 N B [14] $end
$var wire 1 O B [13] $end
$var wire 1 P B [12] $end
$var wire 1 Q B [11] $end
$var wire 1 R B [10] $end
$var wire 1 S B [9] $end
$var wire 1 T B [8] $end
$var wire 1 U B [7] $end
$var wire 1 V B [6] $end
$var wire 1 W B [5] $end
$var wire 1 X B [4] $end
$var wire 1 Y B [3] $end
$var wire 1 Z B [2] $end
$var wire 1 [ B [1] $end
$var wire 1 \ B [0] $end
$var wire 1 ] C_in $end
$var wire 1 % S [15] $end
$var wire 1 & S [14] $end
$var wire 1 ' S [13] $end
$var wire 1 ( S [12] $end
$var wire 1 ) S [11] $end
$var wire 1 * S [10] $end
$var wire 1 + S [9] $end
$var wire 1 , S [8] $end
$var wire 1 - S [7] $end
$var wire 1 . S [6] $end
$var wire 1 / S [5] $end
$var wire 1 0 S [4] $end
$var wire 1 1 S [3] $end
$var wire 1 2 S [2] $end
$var wire 1 3 S [1] $end
$var wire 1 4 S [0] $end
$var wire 1 5 C_out $end
$var wire 1 ^ C0 $end
$var wire 1 _ C1 $end
$var wire 1 ` C2 $end

$scope module rc0 $end
$var parameter 32 a N $end
$var wire 1 I A [3] $end
$var wire 1 J A [2] $end
$var wire 1 K A [1] $end
$var wire 1 L A [0] $end
$var wire 1 Y B [3] $end
$var wire 1 Z B [2] $end
$var wire 1 [ B [1] $end
$var wire 1 \ B [0] $end
$var wire 1 ] C_in $end
$var wire 1 1 S [3] $end
$var wire 1 2 S [2] $end
$var wire 1 3 S [1] $end
$var wire 1 4 S [0] $end
$var wire 1 ^ C_out $end
$var wire 1 b C0 $end
$var wire 1 c C1 $end
$var wire 1 d C2 $end

$scope module fa0 $end
$var wire 1 L A $end
$var wire 1 \ B $end
$var wire 1 ] C_in $end
$var wire 1 4 S $end
$var wire 1 b C_out $end
$var wire 1 e cout_n $end
$var wire 1 f and_ab $end
$var wire 1 g nand_ab $end
$var wire 1 h and_ac $end
$var wire 1 i nand_ac $end
$var wire 1 j and_bc $end
$var wire 1 k nand_bc $end
$var wire 1 l nor_abc $end
$var wire 1 m or_abc $end

$scope module xorabc $end
$var wire 1 L in1 $end
$var wire 1 \ in2 $end
$var wire 1 ] in3 $end
$var wire 1 4 out $end
$upscope $end

$scope module nand1 $end
$var wire 1 L in1 $end
$var wire 1 \ in2 $end
$var wire 1 g out $end
$upscope $end

$scope module not1 $end
$var wire 1 g in1 $end
$var wire 1 f out $end
$upscope $end

$scope module nand2 $end
$var wire 1 L in1 $end
$var wire 1 ] in2 $end
$var wire 1 i out $end
$upscope $end

$scope module not2 $end
$var wire 1 i in1 $end
$var wire 1 h out $end
$upscope $end

$scope module nand3 $end
$var wire 1 \ in1 $end
$var wire 1 ] in2 $end
$var wire 1 k out $end
$upscope $end

$scope module not3 $end
$var wire 1 k in1 $end
$var wire 1 j out $end
$upscope $end

$scope module norandabc $end
$var wire 1 f in1 $end
$var wire 1 h in2 $end
$var wire 1 j in3 $end
$var wire 1 l out $end
$upscope $end

$scope module cout $end
$var wire 1 l in1 $end
$var wire 1 b out $end
$upscope $end
$upscope $end

$scope module fa1 $end
$var wire 1 K A $end
$var wire 1 [ B $end
$var wire 1 b C_in $end
$var wire 1 3 S $end
$var wire 1 c C_out $end
$var wire 1 n cout_n $end
$var wire 1 o and_ab $end
$var wire 1 p nand_ab $end
$var wire 1 q and_ac $end
$var wire 1 r nand_ac $end
$var wire 1 s and_bc $end
$var wire 1 t nand_bc $end
$var wire 1 u nor_abc $end
$var wire 1 v or_abc $end

$scope module xorabc $end
$var wire 1 K in1 $end
$var wire 1 [ in2 $end
$var wire 1 b in3 $end
$var wire 1 3 out $end
$upscope $end

$scope module nand1 $end
$var wire 1 K in1 $end
$var wire 1 [ in2 $end
$var wire 1 p out $end
$upscope $end

$scope module not1 $end
$var wire 1 p in1 $end
$var wire 1 o out $end
$upscope $end

$scope module nand2 $end
$var wire 1 K in1 $end
$var wire 1 b in2 $end
$var wire 1 r out $end
$upscope $end

$scope module not2 $end
$var wire 1 r in1 $end
$var wire 1 q out $end
$upscope $end

$scope module nand3 $end
$var wire 1 [ in1 $end
$var wire 1 b in2 $end
$var wire 1 t out $end
$upscope $end

$scope module not3 $end
$var wire 1 t in1 $end
$var wire 1 s out $end
$upscope $end

$scope module norandabc $end
$var wire 1 o in1 $end
$var wire 1 q in2 $end
$var wire 1 s in3 $end
$var wire 1 u out $end
$upscope $end

$scope module cout $end
$var wire 1 u in1 $end
$var wire 1 c out $end
$upscope $end
$upscope $end

$scope module fa2 $end
$var wire 1 J A $end
$var wire 1 Z B $end
$var wire 1 c C_in $end
$var wire 1 2 S $end
$var wire 1 d C_out $end
$var wire 1 w cout_n $end
$var wire 1 x and_ab $end
$var wire 1 y nand_ab $end
$var wire 1 z and_ac $end
$var wire 1 { nand_ac $end
$var wire 1 | and_bc $end
$var wire 1 } nand_bc $end
$var wire 1 ~ nor_abc $end
$var wire 1 !! or_abc $end

$scope module xorabc $end
$var wire 1 J in1 $end
$var wire 1 Z in2 $end
$var wire 1 c in3 $end
$var wire 1 2 out $end
$upscope $end

$scope module nand1 $end
$var wire 1 J in1 $end
$var wire 1 Z in2 $end
$var wire 1 y out $end
$upscope $end

$scope module not1 $end
$var wire 1 y in1 $end
$var wire 1 x out $end
$upscope $end

$scope module nand2 $end
$var wire 1 J in1 $end
$var wire 1 c in2 $end
$var wire 1 { out $end
$upscope $end

$scope module not2 $end
$var wire 1 { in1 $end
$var wire 1 z out $end
$upscope $end

$scope module nand3 $end
$var wire 1 Z in1 $end
$var wire 1 c in2 $end
$var wire 1 } out $end
$upscope $end

$scope module not3 $end
$var wire 1 } in1 $end
$var wire 1 | out $end
$upscope $end

$scope module norandabc $end
$var wire 1 x in1 $end
$var wire 1 z in2 $end
$var wire 1 | in3 $end
$var wire 1 ~ out $end
$upscope $end

$scope module cout $end
$var wire 1 ~ in1 $end
$var wire 1 d out $end
$upscope $end
$upscope $end

$scope module fa3 $end
$var wire 1 I A $end
$var wire 1 Y B $end
$var wire 1 d C_in $end
$var wire 1 1 S $end
$var wire 1 ^ C_out $end
$var wire 1 "! cout_n $end
$var wire 1 #! and_ab $end
$var wire 1 $! nand_ab $end
$var wire 1 %! and_ac $end
$var wire 1 &! nand_ac $end
$var wire 1 '! and_bc $end
$var wire 1 (! nand_bc $end
$var wire 1 )! nor_abc $end
$var wire 1 *! or_abc $end

$scope module xorabc $end
$var wire 1 I in1 $end
$var wire 1 Y in2 $end
$var wire 1 d in3 $end
$var wire 1 1 out $end
$upscope $end

$scope module nand1 $end
$var wire 1 I in1 $end
$var wire 1 Y in2 $end
$var wire 1 $! out $end
$upscope $end

$scope module not1 $end
$var wire 1 $! in1 $end
$var wire 1 #! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 I in1 $end
$var wire 1 d in2 $end
$var wire 1 &! out $end
$upscope $end

$scope module not2 $end
$var wire 1 &! in1 $end
$var wire 1 %! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 Y in1 $end
$var wire 1 d in2 $end
$var wire 1 (! out $end
$upscope $end

$scope module not3 $end
$var wire 1 (! in1 $end
$var wire 1 '! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 #! in1 $end
$var wire 1 %! in2 $end
$var wire 1 '! in3 $end
$var wire 1 )! out $end
$upscope $end

$scope module cout $end
$var wire 1 )! in1 $end
$var wire 1 ^ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module rc1 $end
$var parameter 32 +! N $end
$var wire 1 E A [3] $end
$var wire 1 F A [2] $end
$var wire 1 G A [1] $end
$var wire 1 H A [0] $end
$var wire 1 U B [3] $end
$var wire 1 V B [2] $end
$var wire 1 W B [1] $end
$var wire 1 X B [0] $end
$var wire 1 ^ C_in $end
$var wire 1 - S [3] $end
$var wire 1 . S [2] $end
$var wire 1 / S [1] $end
$var wire 1 0 S [0] $end
$var wire 1 _ C_out $end
$var wire 1 ,! C0 $end
$var wire 1 -! C1 $end
$var wire 1 .! C2 $end

$scope module fa0 $end
$var wire 1 H A $end
$var wire 1 X B $end
$var wire 1 ^ C_in $end
$var wire 1 0 S $end
$var wire 1 ,! C_out $end
$var wire 1 /! cout_n $end
$var wire 1 0! and_ab $end
$var wire 1 1! nand_ab $end
$var wire 1 2! and_ac $end
$var wire 1 3! nand_ac $end
$var wire 1 4! and_bc $end
$var wire 1 5! nand_bc $end
$var wire 1 6! nor_abc $end
$var wire 1 7! or_abc $end

$scope module xorabc $end
$var wire 1 H in1 $end
$var wire 1 X in2 $end
$var wire 1 ^ in3 $end
$var wire 1 0 out $end
$upscope $end

$scope module nand1 $end
$var wire 1 H in1 $end
$var wire 1 X in2 $end
$var wire 1 1! out $end
$upscope $end

$scope module not1 $end
$var wire 1 1! in1 $end
$var wire 1 0! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 H in1 $end
$var wire 1 ^ in2 $end
$var wire 1 3! out $end
$upscope $end

$scope module not2 $end
$var wire 1 3! in1 $end
$var wire 1 2! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 X in1 $end
$var wire 1 ^ in2 $end
$var wire 1 5! out $end
$upscope $end

$scope module not3 $end
$var wire 1 5! in1 $end
$var wire 1 4! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 0! in1 $end
$var wire 1 2! in2 $end
$var wire 1 4! in3 $end
$var wire 1 6! out $end
$upscope $end

$scope module cout $end
$var wire 1 6! in1 $end
$var wire 1 ,! out $end
$upscope $end
$upscope $end

$scope module fa1 $end
$var wire 1 G A $end
$var wire 1 W B $end
$var wire 1 ,! C_in $end
$var wire 1 / S $end
$var wire 1 -! C_out $end
$var wire 1 8! cout_n $end
$var wire 1 9! and_ab $end
$var wire 1 :! nand_ab $end
$var wire 1 ;! and_ac $end
$var wire 1 <! nand_ac $end
$var wire 1 =! and_bc $end
$var wire 1 >! nand_bc $end
$var wire 1 ?! nor_abc $end
$var wire 1 @! or_abc $end

$scope module xorabc $end
$var wire 1 G in1 $end
$var wire 1 W in2 $end
$var wire 1 ,! in3 $end
$var wire 1 / out $end
$upscope $end

$scope module nand1 $end
$var wire 1 G in1 $end
$var wire 1 W in2 $end
$var wire 1 :! out $end
$upscope $end

$scope module not1 $end
$var wire 1 :! in1 $end
$var wire 1 9! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 G in1 $end
$var wire 1 ,! in2 $end
$var wire 1 <! out $end
$upscope $end

$scope module not2 $end
$var wire 1 <! in1 $end
$var wire 1 ;! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 W in1 $end
$var wire 1 ,! in2 $end
$var wire 1 >! out $end
$upscope $end

$scope module not3 $end
$var wire 1 >! in1 $end
$var wire 1 =! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 9! in1 $end
$var wire 1 ;! in2 $end
$var wire 1 =! in3 $end
$var wire 1 ?! out $end
$upscope $end

$scope module cout $end
$var wire 1 ?! in1 $end
$var wire 1 -! out $end
$upscope $end
$upscope $end

$scope module fa2 $end
$var wire 1 F A $end
$var wire 1 V B $end
$var wire 1 -! C_in $end
$var wire 1 . S $end
$var wire 1 .! C_out $end
$var wire 1 A! cout_n $end
$var wire 1 B! and_ab $end
$var wire 1 C! nand_ab $end
$var wire 1 D! and_ac $end
$var wire 1 E! nand_ac $end
$var wire 1 F! and_bc $end
$var wire 1 G! nand_bc $end
$var wire 1 H! nor_abc $end
$var wire 1 I! or_abc $end

$scope module xorabc $end
$var wire 1 F in1 $end
$var wire 1 V in2 $end
$var wire 1 -! in3 $end
$var wire 1 . out $end
$upscope $end

$scope module nand1 $end
$var wire 1 F in1 $end
$var wire 1 V in2 $end
$var wire 1 C! out $end
$upscope $end

$scope module not1 $end
$var wire 1 C! in1 $end
$var wire 1 B! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 F in1 $end
$var wire 1 -! in2 $end
$var wire 1 E! out $end
$upscope $end

$scope module not2 $end
$var wire 1 E! in1 $end
$var wire 1 D! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 V in1 $end
$var wire 1 -! in2 $end
$var wire 1 G! out $end
$upscope $end

$scope module not3 $end
$var wire 1 G! in1 $end
$var wire 1 F! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 B! in1 $end
$var wire 1 D! in2 $end
$var wire 1 F! in3 $end
$var wire 1 H! out $end
$upscope $end

$scope module cout $end
$var wire 1 H! in1 $end
$var wire 1 .! out $end
$upscope $end
$upscope $end

$scope module fa3 $end
$var wire 1 E A $end
$var wire 1 U B $end
$var wire 1 .! C_in $end
$var wire 1 - S $end
$var wire 1 _ C_out $end
$var wire 1 J! cout_n $end
$var wire 1 K! and_ab $end
$var wire 1 L! nand_ab $end
$var wire 1 M! and_ac $end
$var wire 1 N! nand_ac $end
$var wire 1 O! and_bc $end
$var wire 1 P! nand_bc $end
$var wire 1 Q! nor_abc $end
$var wire 1 R! or_abc $end

$scope module xorabc $end
$var wire 1 E in1 $end
$var wire 1 U in2 $end
$var wire 1 .! in3 $end
$var wire 1 - out $end
$upscope $end

$scope module nand1 $end
$var wire 1 E in1 $end
$var wire 1 U in2 $end
$var wire 1 L! out $end
$upscope $end

$scope module not1 $end
$var wire 1 L! in1 $end
$var wire 1 K! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 E in1 $end
$var wire 1 .! in2 $end
$var wire 1 N! out $end
$upscope $end

$scope module not2 $end
$var wire 1 N! in1 $end
$var wire 1 M! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 U in1 $end
$var wire 1 .! in2 $end
$var wire 1 P! out $end
$upscope $end

$scope module not3 $end
$var wire 1 P! in1 $end
$var wire 1 O! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 K! in1 $end
$var wire 1 M! in2 $end
$var wire 1 O! in3 $end
$var wire 1 Q! out $end
$upscope $end

$scope module cout $end
$var wire 1 Q! in1 $end
$var wire 1 _ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module rc2 $end
$var parameter 32 S! N $end
$var wire 1 A A [3] $end
$var wire 1 B A [2] $end
$var wire 1 C A [1] $end
$var wire 1 D A [0] $end
$var wire 1 Q B [3] $end
$var wire 1 R B [2] $end
$var wire 1 S B [1] $end
$var wire 1 T B [0] $end
$var wire 1 _ C_in $end
$var wire 1 ) S [3] $end
$var wire 1 * S [2] $end
$var wire 1 + S [1] $end
$var wire 1 , S [0] $end
$var wire 1 ` C_out $end
$var wire 1 T! C0 $end
$var wire 1 U! C1 $end
$var wire 1 V! C2 $end

$scope module fa0 $end
$var wire 1 D A $end
$var wire 1 T B $end
$var wire 1 _ C_in $end
$var wire 1 , S $end
$var wire 1 T! C_out $end
$var wire 1 W! cout_n $end
$var wire 1 X! and_ab $end
$var wire 1 Y! nand_ab $end
$var wire 1 Z! and_ac $end
$var wire 1 [! nand_ac $end
$var wire 1 \! and_bc $end
$var wire 1 ]! nand_bc $end
$var wire 1 ^! nor_abc $end
$var wire 1 _! or_abc $end

$scope module xorabc $end
$var wire 1 D in1 $end
$var wire 1 T in2 $end
$var wire 1 _ in3 $end
$var wire 1 , out $end
$upscope $end

$scope module nand1 $end
$var wire 1 D in1 $end
$var wire 1 T in2 $end
$var wire 1 Y! out $end
$upscope $end

$scope module not1 $end
$var wire 1 Y! in1 $end
$var wire 1 X! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 D in1 $end
$var wire 1 _ in2 $end
$var wire 1 [! out $end
$upscope $end

$scope module not2 $end
$var wire 1 [! in1 $end
$var wire 1 Z! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 T in1 $end
$var wire 1 _ in2 $end
$var wire 1 ]! out $end
$upscope $end

$scope module not3 $end
$var wire 1 ]! in1 $end
$var wire 1 \! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 X! in1 $end
$var wire 1 Z! in2 $end
$var wire 1 \! in3 $end
$var wire 1 ^! out $end
$upscope $end

$scope module cout $end
$var wire 1 ^! in1 $end
$var wire 1 T! out $end
$upscope $end
$upscope $end

$scope module fa1 $end
$var wire 1 C A $end
$var wire 1 S B $end
$var wire 1 T! C_in $end
$var wire 1 + S $end
$var wire 1 U! C_out $end
$var wire 1 `! cout_n $end
$var wire 1 a! and_ab $end
$var wire 1 b! nand_ab $end
$var wire 1 c! and_ac $end
$var wire 1 d! nand_ac $end
$var wire 1 e! and_bc $end
$var wire 1 f! nand_bc $end
$var wire 1 g! nor_abc $end
$var wire 1 h! or_abc $end

$scope module xorabc $end
$var wire 1 C in1 $end
$var wire 1 S in2 $end
$var wire 1 T! in3 $end
$var wire 1 + out $end
$upscope $end

$scope module nand1 $end
$var wire 1 C in1 $end
$var wire 1 S in2 $end
$var wire 1 b! out $end
$upscope $end

$scope module not1 $end
$var wire 1 b! in1 $end
$var wire 1 a! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 C in1 $end
$var wire 1 T! in2 $end
$var wire 1 d! out $end
$upscope $end

$scope module not2 $end
$var wire 1 d! in1 $end
$var wire 1 c! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 S in1 $end
$var wire 1 T! in2 $end
$var wire 1 f! out $end
$upscope $end

$scope module not3 $end
$var wire 1 f! in1 $end
$var wire 1 e! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 a! in1 $end
$var wire 1 c! in2 $end
$var wire 1 e! in3 $end
$var wire 1 g! out $end
$upscope $end

$scope module cout $end
$var wire 1 g! in1 $end
$var wire 1 U! out $end
$upscope $end
$upscope $end

$scope module fa2 $end
$var wire 1 B A $end
$var wire 1 R B $end
$var wire 1 U! C_in $end
$var wire 1 * S $end
$var wire 1 V! C_out $end
$var wire 1 i! cout_n $end
$var wire 1 j! and_ab $end
$var wire 1 k! nand_ab $end
$var wire 1 l! and_ac $end
$var wire 1 m! nand_ac $end
$var wire 1 n! and_bc $end
$var wire 1 o! nand_bc $end
$var wire 1 p! nor_abc $end
$var wire 1 q! or_abc $end

$scope module xorabc $end
$var wire 1 B in1 $end
$var wire 1 R in2 $end
$var wire 1 U! in3 $end
$var wire 1 * out $end
$upscope $end

$scope module nand1 $end
$var wire 1 B in1 $end
$var wire 1 R in2 $end
$var wire 1 k! out $end
$upscope $end

$scope module not1 $end
$var wire 1 k! in1 $end
$var wire 1 j! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 B in1 $end
$var wire 1 U! in2 $end
$var wire 1 m! out $end
$upscope $end

$scope module not2 $end
$var wire 1 m! in1 $end
$var wire 1 l! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 R in1 $end
$var wire 1 U! in2 $end
$var wire 1 o! out $end
$upscope $end

$scope module not3 $end
$var wire 1 o! in1 $end
$var wire 1 n! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 j! in1 $end
$var wire 1 l! in2 $end
$var wire 1 n! in3 $end
$var wire 1 p! out $end
$upscope $end

$scope module cout $end
$var wire 1 p! in1 $end
$var wire 1 V! out $end
$upscope $end
$upscope $end

$scope module fa3 $end
$var wire 1 A A $end
$var wire 1 Q B $end
$var wire 1 V! C_in $end
$var wire 1 ) S $end
$var wire 1 ` C_out $end
$var wire 1 r! cout_n $end
$var wire 1 s! and_ab $end
$var wire 1 t! nand_ab $end
$var wire 1 u! and_ac $end
$var wire 1 v! nand_ac $end
$var wire 1 w! and_bc $end
$var wire 1 x! nand_bc $end
$var wire 1 y! nor_abc $end
$var wire 1 z! or_abc $end

$scope module xorabc $end
$var wire 1 A in1 $end
$var wire 1 Q in2 $end
$var wire 1 V! in3 $end
$var wire 1 ) out $end
$upscope $end

$scope module nand1 $end
$var wire 1 A in1 $end
$var wire 1 Q in2 $end
$var wire 1 t! out $end
$upscope $end

$scope module not1 $end
$var wire 1 t! in1 $end
$var wire 1 s! out $end
$upscope $end

$scope module nand2 $end
$var wire 1 A in1 $end
$var wire 1 V! in2 $end
$var wire 1 v! out $end
$upscope $end

$scope module not2 $end
$var wire 1 v! in1 $end
$var wire 1 u! out $end
$upscope $end

$scope module nand3 $end
$var wire 1 Q in1 $end
$var wire 1 V! in2 $end
$var wire 1 x! out $end
$upscope $end

$scope module not3 $end
$var wire 1 x! in1 $end
$var wire 1 w! out $end
$upscope $end

$scope module norandabc $end
$var wire 1 s! in1 $end
$var wire 1 u! in2 $end
$var wire 1 w! in3 $end
$var wire 1 y! out $end
$upscope $end

$scope module cout $end
$var wire 1 y! in1 $end
$var wire 1 ` out $end
$upscope $end
$upscope $end
$upscope $end

$scope module rc3 $end
$var parameter 32 {! N $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 M B [3] $end
$var wire 1 N B [2] $end
$var wire 1 O B [1] $end
$var wire 1 P B [0] $end
$var wire 1 ` C_in $end
$var wire 1 % S [3] $end
$var wire 1 & S [2] $end
$var wire 1 ' S [1] $end
$var wire 1 ( S [0] $end
$var wire 1 5 C_out $end
$var wire 1 |! C0 $end
$var wire 1 }! C1 $end
$var wire 1 ~! C2 $end

$scope module fa0 $end
$var wire 1 @ A $end
$var wire 1 P B $end
$var wire 1 ` C_in $end
$var wire 1 ( S $end
$var wire 1 |! C_out $end
$var wire 1 !" cout_n $end
$var wire 1 "" and_ab $end
$var wire 1 #" nand_ab $end
$var wire 1 $" and_ac $end
$var wire 1 %" nand_ac $end
$var wire 1 &" and_bc $end
$var wire 1 '" nand_bc $end
$var wire 1 (" nor_abc $end
$var wire 1 )" or_abc $end

$scope module xorabc $end
$var wire 1 @ in1 $end
$var wire 1 P in2 $end
$var wire 1 ` in3 $end
$var wire 1 ( out $end
$upscope $end

$scope module nand1 $end
$var wire 1 @ in1 $end
$var wire 1 P in2 $end
$var wire 1 #" out $end
$upscope $end

$scope module not1 $end
$var wire 1 #" in1 $end
$var wire 1 "" out $end
$upscope $end

$scope module nand2 $end
$var wire 1 @ in1 $end
$var wire 1 ` in2 $end
$var wire 1 %" out $end
$upscope $end

$scope module not2 $end
$var wire 1 %" in1 $end
$var wire 1 $" out $end
$upscope $end

$scope module nand3 $end
$var wire 1 P in1 $end
$var wire 1 ` in2 $end
$var wire 1 '" out $end
$upscope $end

$scope module not3 $end
$var wire 1 '" in1 $end
$var wire 1 &" out $end
$upscope $end

$scope module norandabc $end
$var wire 1 "" in1 $end
$var wire 1 $" in2 $end
$var wire 1 &" in3 $end
$var wire 1 (" out $end
$upscope $end

$scope module cout $end
$var wire 1 (" in1 $end
$var wire 1 |! out $end
$upscope $end
$upscope $end

$scope module fa1 $end
$var wire 1 ? A $end
$var wire 1 O B $end
$var wire 1 |! C_in $end
$var wire 1 ' S $end
$var wire 1 }! C_out $end
$var wire 1 *" cout_n $end
$var wire 1 +" and_ab $end
$var wire 1 ," nand_ab $end
$var wire 1 -" and_ac $end
$var wire 1 ." nand_ac $end
$var wire 1 /" and_bc $end
$var wire 1 0" nand_bc $end
$var wire 1 1" nor_abc $end
$var wire 1 2" or_abc $end

$scope module xorabc $end
$var wire 1 ? in1 $end
$var wire 1 O in2 $end
$var wire 1 |! in3 $end
$var wire 1 ' out $end
$upscope $end

$scope module nand1 $end
$var wire 1 ? in1 $end
$var wire 1 O in2 $end
$var wire 1 ," out $end
$upscope $end

$scope module not1 $end
$var wire 1 ," in1 $end
$var wire 1 +" out $end
$upscope $end

$scope module nand2 $end
$var wire 1 ? in1 $end
$var wire 1 |! in2 $end
$var wire 1 ." out $end
$upscope $end

$scope module not2 $end
$var wire 1 ." in1 $end
$var wire 1 -" out $end
$upscope $end

$scope module nand3 $end
$var wire 1 O in1 $end
$var wire 1 |! in2 $end
$var wire 1 0" out $end
$upscope $end

$scope module not3 $end
$var wire 1 0" in1 $end
$var wire 1 /" out $end
$upscope $end

$scope module norandabc $end
$var wire 1 +" in1 $end
$var wire 1 -" in2 $end
$var wire 1 /" in3 $end
$var wire 1 1" out $end
$upscope $end

$scope module cout $end
$var wire 1 1" in1 $end
$var wire 1 }! out $end
$upscope $end
$upscope $end

$scope module fa2 $end
$var wire 1 > A $end
$var wire 1 N B $end
$var wire 1 }! C_in $end
$var wire 1 & S $end
$var wire 1 ~! C_out $end
$var wire 1 3" cout_n $end
$var wire 1 4" and_ab $end
$var wire 1 5" nand_ab $end
$var wire 1 6" and_ac $end
$var wire 1 7" nand_ac $end
$var wire 1 8" and_bc $end
$var wire 1 9" nand_bc $end
$var wire 1 :" nor_abc $end
$var wire 1 ;" or_abc $end

$scope module xorabc $end
$var wire 1 > in1 $end
$var wire 1 N in2 $end
$var wire 1 }! in3 $end
$var wire 1 & out $end
$upscope $end

$scope module nand1 $end
$var wire 1 > in1 $end
$var wire 1 N in2 $end
$var wire 1 5" out $end
$upscope $end

$scope module not1 $end
$var wire 1 5" in1 $end
$var wire 1 4" out $end
$upscope $end

$scope module nand2 $end
$var wire 1 > in1 $end
$var wire 1 }! in2 $end
$var wire 1 7" out $end
$upscope $end

$scope module not2 $end
$var wire 1 7" in1 $end
$var wire 1 6" out $end
$upscope $end

$scope module nand3 $end
$var wire 1 N in1 $end
$var wire 1 }! in2 $end
$var wire 1 9" out $end
$upscope $end

$scope module not3 $end
$var wire 1 9" in1 $end
$var wire 1 8" out $end
$upscope $end

$scope module norandabc $end
$var wire 1 4" in1 $end
$var wire 1 6" in2 $end
$var wire 1 8" in3 $end
$var wire 1 :" out $end
$upscope $end

$scope module cout $end
$var wire 1 :" in1 $end
$var wire 1 ~! out $end
$upscope $end
$upscope $end

$scope module fa3 $end
$var wire 1 = A $end
$var wire 1 M B $end
$var wire 1 ~! C_in $end
$var wire 1 % S $end
$var wire 1 5 C_out $end
$var wire 1 <" cout_n $end
$var 